if (tick == 0) {
    if (typeof (sceneexist) == 'undefined') {
        OpenCanvas('wCanvas', WC = 520, HC = 350);
        var scene, camera, renderer; CreateScene(WC, HC);

        X = 0; Y = 0; Z = 10; W = 1;
        strelka = new THREE.Object3D();
        osnova = DrawOsnova()
        ruka = DrawRuka()
        gruz = DrawGruz()
        ruka.position.set(-4,3,0)
        strelka.add(osnova); strelka.add(ruka); strelka.add(gruz);
        scene.add(strelka)
        

        var clock = new THREE.Clock();
        var time = 0;
        var delta = 0;

        render();
    }
}

function Box(x,y,z,col) {
    var material = new THREE.MeshLambertMaterial({color: col});
    var geometry = new THREE.CubeGeometry(x,y,z);
    return new THREE.Mesh( geometry, material ); 
}

function Cyl(x,y,z,col) {
    var material = new THREE.MeshLambertMaterial({color: col});
    var geometry = new THREE.CylinderGeometry(x,y,z,15);
    return new THREE.Mesh( geometry, material );

}

function Circle(radius, segments, start, lenght, col) {
    var material = new THREE.MeshLambertMaterial({color: col});
    var geometry = new THREE.CircleGeometry(radius, segments, start, lenght);
    return new THREE.Mesh( geometry, material );
}

function Torus(radius, tube, radialSegments, tubularSegments, arc, col) {
    var material = new THREE.MeshLambertMaterial({color: col});
    var geometry = new THREE.TorusGeometry(radius, tube, radialSegments, tubularSegments, arc);
    return new THREE.Mesh( geometry, material );
}

function DrawOsnova() {
    var osnova = new THREE.Object3D()
    var balka1 = Box(15,1,1, "#000000")
    var balka2 = Box(15,1,1, "#000000")
    var balka3 = Box(5,3,1, "#000000")
    balka1.position.set(0,0,0)
    balka2.position.set(0,5,0)
    balka3.position.set(-4,2.5,0)
    balka3.rotation.set(0,0,1.57)
    osnova.add(balka1)
    osnova.add(balka2)
    osnova.add(balka3)
    var corpus = new THREE.Object3D()
    var stena1 = new Circle(1.5,15,0,3.2, "#000000");
    var stena2 = new Circle(1.5,15,0,3.2, "#000000");
    var stena3 = new Circle(1.5,15,0,3.2, "#000000");
    var stena4 = new Circle(1.5,15,0,3.2, "#000000");
    stena1.position.set(0,0,0)
    stena2.position.set(0,0,0.5)
    stena3.position.set(0,0,0)
    stena4.position.set(0,0,0.5)
    stena3.rotation.set(0,3.14,0);
    stena4.rotation.set(0,3.14,0);
    corpus.add(stena1); corpus.add(stena2); corpus.add(stena3); corpus.add(stena4);
    corpus.position.set(-4,2.5,0);
    corpus.rotation.set(1.57,0,0);
    osnova.add(corpus);
    return osnova
}

function DrawRuka() {
    var ruka = new THREE.Object3D();
    var balka1 = Cyl(0.2,0.2,6, "#000000");
    balka1.position.set(3,-0.8,0.5)
    balka1.rotation.set(0,0,1.57)
    ruka.add(balka1)
    return ruka
}

function DrawGruz() {
    var gruz = new Box(2,2,2, "#FFFFFF");
    var balka1 = Cyl(0.2,0.2,6, "#ffffff");
    var tor = Torus(0.3, 0.2, 10, 100, 6.3,"#ffffff");
    tor.position.set(-1,2.2,0.5)
    tor.rotation.set(0, 1.57, 0)
    balka1.position.set(6,-0.8,0.5)
    gruz.add(tor)
    gruz.add(balka1)

    return gruz
}

function render() {
    requestAnimationFrame(render);
    controls.update();
    renderer.render(scene, camera);

    delta = clock.getDelta();
    time += delta;


    //???.rotation.x = abs(cos(time)) * (-0.3);
    //krilo1.position.z = abs(cos(time)) * (-0.9);
    //???.rotation.x = abs(cos(time)) * (-0.3);
    //krilo2.position.z = abs(cos(time)) * (0.9);
}

function CreateScene(WC, HC) {
    if (typeof (sceneexist) == 'undefined') {
        sceneexist = true;
        // объявление сцены
        scene = new THREE.Scene();
        const axesHelper = new THREE.AxesHelper(5);
        scene.add(axesHelper);
        scene.background = new THREE.Color(0x444488);
        camera = new THREE.PerspectiveCamera(25, WC / HC, 1, 1000);
        camera.position.x = 0;
        camera.position.y = -360;
        camera.position.z = 100;
        //  camera.lookAt( scene.position );
        renderer = new THREE.WebGLRenderer({
            alpha: true, antialias: true
        });

        renderer.setPixelRatio(window.devicePixelRatio);
        // привяжем отрисовку к html и высоте канвы
        // renderer.setSize( window.innerWidth, window.innerHeight );
        document.getElementById("wCanvas").appendChild(renderer.domElement);
        renderer.setSize(WC, HC);
        // установим модуль управления камерой
        controls = new THREE.TrackballControls(camera, renderer.domElement);
        controls.rotateSpeed = 1.0;
        controls.zoomSpeed = 1.2;
        controls.panSpeed = 0.8;
        controls.noZoom = false;
        controls.noPan = true;
        controls.staticMoving = false;
        controls.dynamicDampingFactor = 0.2;
        // источники света
        scene.add(new THREE.AmbientLight(0x555555));
        var directionalLight = new THREE.DirectionalLight(0xFFFFFF, 1);
        directionalLight.position.set(100, -100, 40).normalize();
        scene.add(directionalLight);
        directionalLight.position.set(100, -100, 40).normalize();
        scene.add(directionalLight);
    }
}

{{html
    < !DOCTYPE html >
        <head>
            <script SRC="http://livelab.spb.ru/x3d/three.min.js"></script>
            <script SRC="http://livelab.spb.ru/x3d/TrackballControls.js"></script>
            <script SRC="http://livelab.spb.ru/x3d/OBJLoader.js"></script>
            <script SRC="http://livelab.spb.ru/x3d/DDSLoader.js"></script>
            <script SRC="http://livelab.spb.ru/x3d/MTLLoader.js"></script>
            <input type=button value='Gudok' onclick='sound("done.wav");'>
    </head>
html}}